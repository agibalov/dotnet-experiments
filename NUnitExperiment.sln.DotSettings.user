<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=F8985D34748548E2A73CFF0A60C20C6F/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=F8985D34748548E2A73CFF0A60C20C6F/Name/@EntryValue">StringTests</s:String>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=F8985D34748548E2A73CFF0A60C20C6F/XmlSerializedElements/@EntryValue">&lt;Session&gt;&lt;Elements&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestFixtureElement" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestFixtureElement" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests" type="NUnitTestFixtureElement" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.SequentialTests" type="NUnitTestFixtureElement" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestFixtureElement" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestFixtureElement" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfAllItemsAreUnique" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfAllItemsAreUnique" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfAllItemsAreUnique" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfAllItemsAreUnique" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionContains" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionContains" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionContains" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionContains" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionDoesNotContain" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionDoesNotContain" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionDoesNotContain" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionDoesNotContain" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionIsASubsetOfAnotherCollection" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionIsASubsetOfAnotherCollection" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionIsASubsetOfAnotherCollection" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionIsASubsetOfAnotherCollection" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionIsEmpty" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionIsEmpty" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionIsEmpty" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionIsEmpty" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionIsNotASubsetOfAnotherCollection" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionIsNotASubsetOfAnotherCollection" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionIsNotASubsetOfAnotherCollection" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionIsNotASubsetOfAnotherCollection" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionIsNotEmpty" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionIsNotEmpty" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionIsNotEmpty" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionIsNotEmpty" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionIsOrdered" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionIsOrdered" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionIsOrdered" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionIsOrdered" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionsAreEqual" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionsAreEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionsAreEqual" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionsAreEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionsAreEquivalent" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionsAreEquivalent" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionsAreEquivalent" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionsAreEquivalent" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionsAreNotEqual" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionsAreNotEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionsAreNotEqual" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionsAreNotEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.CollectionTests.CanCheckIfCollectionsAreNotEquivalen" ParentId="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.CollectionTests" MethodName="CanCheckIfCollectionsAreNotEquivalen" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.CollectionTests.CanCheckIfCollectionsAreNotEquivalen" ParentId="NUnitExperiment.Trivial.Classic.CollectionTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.CollectionTests" MethodName="CanCheckIfCollectionsAreNotEquivalen" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringDoesNotEndWith" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringDoesNotEndWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringDoesNotEndWith" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringDoesNotEndWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringDoesNotMatch" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringDoesNotMatch" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringDoesNotMatch" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringDoesNotMatch" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringDoesNotStartWith" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringDoesNotStartWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringDoesNotStartWith" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringDoesNotStartWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringEndsWith" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringEndsWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringEndsWith" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringEndsWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringHasASubstring" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringHasASubstring" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringHasASubstring" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringHasASubstring" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringHasNoSubstring" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringHasNoSubstring" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringHasNoSubstring" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringHasNoSubstring" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringMatches" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringMatches" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringMatches" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringMatches" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringsAreEqual" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringsAreEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringsAreEqual" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringsAreEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringsAreEqualIgnoringCase" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringsAreEqualIgnoringCase" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringsAreEqualIgnoringCase" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringsAreEqualIgnoringCase" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringsAreNotEqual" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringsAreNotEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringsAreNotEqual" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringsAreNotEqual" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.ConstraintBased.StringTests.CanCheckIfStringStartsWith" ParentId="NUnitExperiment.Trivial.ConstraintBased.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.ConstraintBased.StringTests" MethodName="CanCheckIfStringStartsWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.Trivial.Classic.StringTests.CanCheckIfStringStartsWith" ParentId="NUnitExperiment.Trivial.Classic.StringTests" type="NUnitTestElement" TypeName="NUnitExperiment.Trivial.Classic.StringTests" MethodName="CanCheckIfStringStartsWith" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.SequentialTests.CanComputeSum" ParentId="NUnitExperiment.SequentialTests" type="NUnitTestElement" TypeName="NUnitExperiment.SequentialTests" MethodName="CanComputeSum" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum" ParentId="NUnitExperiment.CombinatorialTests" type="NUnitTestElement" TypeName="NUnitExperiment.CombinatorialTests" MethodName="CanComputeSum" Project="D0ABEDB0-8201-427C-8B7C-C873CFFBB616" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.SequentialTests.CanComputeSum.CanComputeSum(0,-1,-1)" ParentId="NUnitExperiment.SequentialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(1,1)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(1,2)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.SequentialTests.CanComputeSum.CanComputeSum(1,2,3)" ParentId="NUnitExperiment.SequentialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(1,3)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(1,4)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(2,1)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(2,2)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(2,3)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(2,4)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(3,1)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(3,2)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(3,3)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(3,4)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.SequentialTests.CanComputeSum.CanComputeSum(3,5,8)" ParentId="NUnitExperiment.SequentialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(4,1)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(4,2)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(4,3)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="NUnitExperiment.CombinatorialTests.CanComputeSum.CanComputeSum(4,4)" ParentId="NUnitExperiment.CombinatorialTests.CanComputeSum" type="NUnitRowTestElement" /&gt;&lt;/Elements&gt;&lt;/Session&gt;</s:String></wpf:ResourceDictionary>